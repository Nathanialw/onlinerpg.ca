-multiple players per world working together
-psuedo turn based like final fantasy 7
-keep it single page

constraints
-attacks are linear axis spells/arrows, instant spells, and melee instant
-MAYBE diagonal projectiles, not sure yet
-enemies walk direct at and attack, no AI
-only NSEW movement
-only ASCI chars
-relatively small maps (256x256 tiles?)
  only send 8x8 chunk of the map at a time to the browser (8cells x 8cells x 8(char size) = 512 bytes/1500bytes per request)
-simple goal go deeper into the dungeon get loot
-can only click on one unit at a time
-minimal UI
  player frame
  target frame
  spells
  bag
  stats
-simple grid collision
-fixed damage (maybe random damage later)
  -possible random damage added on a server response after an attack (Seal of Command-like)
-dialogue box to show happenings (enemy deaths, acquired items)



gamey
-items like throwing, but they need to be very strong or even 
    necessary otherwise people won't use them
-XP
-skills get weaker against higher level enemies 
    as you level up you need to put more points into them to keep effective
    but they stay effeective against low level enemies
    means you are strong at low levels and then have to specialize later
-have the viewport sit in the window with the UI elements below 
    and the name of the game above


short term:
-enemies to follow between map chunks with pathing
-login and db to save game state

-spells 
  -1 for species
  //-1 for subspecies
  -4 class
  -1 for alignment
    -// can swap these out if you find books of spells, but can only know a max num of spells

-when holding down move, if it colides into a unit. just stop instead of attacking
-come up with a list of spells

-if the data is already loaded it doesn't fetch it again, unless there is new info to grab
-text feedback for actions
-time system
  -1 move/attack = 1 minute
  -rest = 10 mins and heals one health | unless you get attacked
-have enemies drop an item when they die
-scroll bar on the combat log
-fog of war/vision blocking by terrain
-local client side DB SQL.js to store static data, like item descriptions

medium term:
-items
-UI equipment
-UI bags
-UI spells
-UI status
-traits based on the unit's parents and what it does while alive


long term:
-mines to enter
-build buildings
-start with ally families where you can use the men as units
-store world state in db
-proc gen maps
-simple enemy AI





bugs:
  pathing stops if target location is inacceible, it should just find the closest cell and go there